package org.uva.sea.ql.parser.antlr.QL4;

import java.io.IOException;

import org.antlr.v4.runtime.ANTLRFileStream;
import org.antlr.v4.runtime.CommonTokenStream;
import org.antlr.v4.runtime.tree.ParseTree;
import org.uva.sea.ql.parser.antlr.QL4.AST.HighLevel.Form;
import org.uva.sea.ql.parser.antlr.QL4.Visitors.AntlrVisitor;

import QL4.QL4Lexer;
import QL4.QL4Parser;

/**
 * This class will request a file and attempt to visit it using QL4 parser
 * generated by applying antlr4 on QL4 grammar
 * 
 * @author Sammie Katt
 * 
 */
public class ASTExtractor {

	/**
	 * Main function for the QL DSL language. 
	 * This class requests a file to parse, and generates
	 * a question UI.
	 */
	public Form parseQuestionair(String fileToParse) throws IOException {
		// process file into tokens
		ANTLRFileStream fStream = new ANTLRFileStream(fileToParse);
		QL4Lexer lexer = new QL4Lexer(fStream);
		CommonTokenStream tokens = new CommonTokenStream(lexer);

		// create antlr tree from tokens
		QL4Parser parser = new QL4Parser(tokens);
		ParseTree tree = parser.form();

		// parse antlr tree into own abstract tree
		AntlrVisitor ASTParser = new AntlrVisitor();
		Form ast = (Form) tree.accept(ASTParser);
		
		return ast;
	}

	

}
