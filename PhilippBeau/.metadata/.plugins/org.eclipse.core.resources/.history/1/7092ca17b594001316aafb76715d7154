package nl.uva.sc.test;

import static org.junit.Assert.fail;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import nl.uva.sc.parser.BookParser;
import nl.uva.sc.parser.Token;
import nl.uva.sc.parser.subscriber.TermFrequency;

import org.junit.Test;

public class TestTF {

    public static final String BOOK_FILENAME = "pride-and-prejudice.txt";

    public static List<Token> mTrueIndex = new ArrayList<>() ;

        
    
    @Test
    public void test() {

        TermFrequency index = new TermFrequency();
        BookParser bParser = new BookParser(new File(BOOK_FILENAME));
        bParser.subscribe(index);

        try {
            bParser.parse();
        } catch (IOException e) {
            fail("The book parser could not parse the given file \"" + BOOK_FILENAME + "\"");
        }

        List<Token> sortedTokenList = index.getSortedTokens();
        for (int i = 1; i < 26; ++i) {
            System.out.println(sortedTokenList.get(sortedTokenList.size() - i));
        }

        mr  -  786
        elizabeth  -  635
        very  -  488
        darcy  -  418
        such  -  395
        mrs  -  343
        much  -  329
        more  -  327
        bennet  -  323
        bingley  -  306
        jane  -  295
        miss  -  283
        one  -  275
        know  -  239
        before  -  229
        herself  -  227
        though  -  226
        well  -  224
        never  -  220
        sister  -  218
        soon  -  216
        think  -  211
        now  -  209
        time  -  203
        good - 201
    }
}
